{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/gabriel/Documents/Desarrollo/SGSAR/Mobil/mobil/src/navigation/DefaultNavigator.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport PrivateStackScreen from \"./PrivateStackScreen\";\nimport PublicStackScreen from \"./PublicStackScreen\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar DefaultNavigator = function DefaultNavigator() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.users;\n  }),\n      userToken = _useSelector.userToken;\n\n  var _retriveDate = function _retriveDate() {\n    var token, data, message;\n    return _regeneratorRuntime.async(function _retriveDate$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@userToken'));\n\n          case 3:\n            token = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@userLogin'));\n\n          case 6:\n            data = _context.sent;\n\n            if (token && data) {\n              dispatch({\n                type: 'SET_USER',\n                response: JSON.parse(data)\n              });\n              dispatch({\n                type: 'SET_TOKEN',\n                token: token\n              });\n            } else {\n              console.log('vacio');\n            }\n\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            message = _context.t0.message;\n            console.log('nell');\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(function () {\n    _retriveDate();\n\n    return function () {};\n  }, []);\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, userToken !== null ? React.createElement(PrivateStackScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }) : React.createElement(PublicStackScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 53\n    }\n  }));\n};\n\nexport default DefaultNavigator;","map":{"version":3,"sources":["/home/gabriel/Documents/Desarrollo/SGSAR/Mobil/mobil/src/navigation/DefaultNavigator.js"],"names":["React","useEffect","PrivateStackScreen","PublicStackScreen","useSelector","useDispatch","NavigationContainer","AsyncStorage","DefaultNavigator","dispatch","state","users","userToken","_retriveDate","getItem","token","data","type","response","JSON","parse","console","log","message"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,kBAAP;AACA,OAAOC,iBAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACD,qBAAsBD,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,KAAV;AAAA,GAAN,CAAjC;AAAA,MAAQC,SAAR,gBAAQA,SAAR;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEEN,YAAY,CAACO,OAAb,CAAqB,YAArB,CAFF;;AAAA;AAEZC,YAAAA,KAFY;AAAA;AAAA,6CAGCR,YAAY,CAACO,OAAb,CAAqB,YAArB,CAHD;;AAAA;AAGZE,YAAAA,IAHY;;AAIlB,gBAAGD,KAAK,IAAIC,IAAZ,EAAiB;AACfP,cAAAA,QAAQ,CAAC;AAACQ,gBAAAA,IAAI,EAAC,UAAN;AAAiBC,gBAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWJ,IAAX;AAA3B,eAAD,CAAR;AACAP,cAAAA,QAAQ,CAAC;AAACQ,gBAAAA,IAAI,EAAC,WAAN;AAAmBF,gBAAAA,KAAK,EAAEA;AAA1B,eAAD,CAAR;AACD,aAHD,MAGK;AACHM,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AATiB;AAAA;;AAAA;AAAA;AAAA;AAUTC,YAAAA,OAVS,eAUTA,OAVS;AAWlBF,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AAXkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAeDrB,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,YAAY;;AAGZ,WAAO,YAAM,CAEZ,CAFD;AAGD,GAPQ,EAON,EAPM,CAAT;AAQA,SACM,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,SAAS,KAAK,IAAd,GAAqB,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,GAA6C,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9C,CADN;AAKC,CA/BD;;AAiCA,eAAeJ,gBAAf","sourcesContent":["import React, {useEffect} from \"react\";\nimport PrivateStackScreen from './PrivateStackScreen'\nimport PublicStackScreen from './PublicStackScreen'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { NavigationContainer } from '@react-navigation/native'\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst DefaultNavigator = () => { \n  const dispatch = useDispatch()\n const { userToken } = useSelector(state => state.users)        \n const _retriveDate = async () => {        \n  try {   \n    const token = await AsyncStorage.getItem('@userToken');    \n    const data = await AsyncStorage.getItem('@userLogin');            \n    if(token && data){\n      dispatch({type:'SET_USER',response: JSON.parse(data)})\n      dispatch({type:'SET_TOKEN', token: token })\n    }else{\n      console.log('vacio')\n    }    \n  } catch ({ message }) {\n    console.log('nell'); \n  }\n};\n\nuseEffect(() => {\n  _retriveDate()\n  /*AsyncStorage.removeItem('@userToken');\n  AsyncStorage.removeItem('@userLogin');*/\n  return () => {\n    \n  }\n}, [])\nreturn (  \t\n      <NavigationContainer>   \n      {userToken !== null ? <PrivateStackScreen/> : <PublicStackScreen/>}      \n      </NavigationContainer> \n  );\n}\n\nexport default DefaultNavigator;"]},"metadata":{},"sourceType":"module"}